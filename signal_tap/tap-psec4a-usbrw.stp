<session jtag_chain="USB-Blaster [USB-0]" jtag_device="@1: EP3C25/EP4CE22 (0x020F30DD)" sof_file="">
  <display_tree gui_logging_enabled="0">
    <display_branch instance="auto_signaltap_0" signal_set="USE_GLOBAL_TEMP" trigger="USE_GLOBAL_TEMP"/>
  </display_tree>
  <instance entity_name="sld_signaltap" is_auto_node="yes" is_expanded="true" name="auto_signaltap_0" source_file="sld_signaltap.vhd">
    <node_ip_info instance_id="0" mfg_id="110" node_id="0" version="6"/>
    <position_info>
      <single attribute="active tab" value="1"/>
      <single attribute="data horizontal scroll position" value="14"/>
      <single attribute="data vertical scroll position" value="0"/>
      <single attribute="setup horizontal scroll position" value="0"/>
      <single attribute="setup vertical scroll position" value="0"/>
      <single attribute="zoom level denominator" value="1"/>
      <single attribute="zoom level numerator" value="2"/>
      <single attribute="zoom offset denominator" value="2"/>
      <single attribute="zoom offset numerator" value="130561"/>
    </position_info>
    <signal_set global_temp="1" name="signal_set: 2018/02/24 11:04:49  #0">
      <clock name="usb_32bit:xUSB|USB_IFCLK" polarity="posedge" tap_mode="classic"/>
      <config ram_type="M4K" reserved_data_nodes="0" reserved_storage_qualifier_nodes="0" reserved_trigger_nodes="0" sample_depth="512" trigger_in_enable="no" trigger_out_enable="no"/>
      <top_entity/>
      <signal_vec>
        <trigger_input_vec>
          <wire name="USB_CTL[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_CTL[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_CTL[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[10]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[11]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[12]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[13]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[14]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[15]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[8]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[9]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_RDY[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_RDY[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[0]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[10]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[11]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[12]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[13]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[14]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[15]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[1]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[2]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[3]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[4]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[5]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[6]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[7]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[8]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[9]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|tx_ack_i" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|tx_rdy_o" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|usb_slwr_i" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_rdy_i" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|RBUSY" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|STARTRD" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|WBUSY" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|read_state" tap_mode="classic" type="state machine"/>
          <wire name="usb_32bit:xUSB|read_state.ENDDELAY" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_SAVE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_TARGET" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_WAIT" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st2_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st3_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st4_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state" tap_mode="classic" type="state machine"/>
          <wire name="usb_32bit:xUSB|write_state.IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.RCHECK" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.RD_DONE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE1" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE2" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE3" tap_mode="classic" type="combinatorial"/>
        </trigger_input_vec>
        <data_input_vec>
          <wire name="USB_CTL[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_CTL[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_CTL[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[10]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[11]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[12]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[13]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[14]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[15]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[8]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[9]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_RDY[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_RDY[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[0]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[10]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[11]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[12]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[13]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[14]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[15]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[1]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[2]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[3]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[4]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[5]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[6]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[7]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[8]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[9]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|tx_ack_i" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|tx_rdy_o" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|usb_slwr_i" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_rdy_i" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|RBUSY" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|STARTRD" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|WBUSY" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|read_state" tap_mode="classic" type="state machine"/>
          <wire name="usb_32bit:xUSB|read_state.ENDDELAY" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_SAVE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_TARGET" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_WAIT" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st2_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st3_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st4_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state" tap_mode="classic" type="state machine"/>
          <wire name="usb_32bit:xUSB|write_state.IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.RCHECK" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.RD_DONE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE1" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE2" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE3" tap_mode="classic" type="combinatorial"/>
        </data_input_vec>
        <storage_qualifier_input_vec>
          <wire name="USB_CTL[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_CTL[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_CTL[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[10]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[11]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[12]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[13]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[14]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[15]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[8]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_FD[9]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_PA[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_RDY[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="USB_RDY[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[0]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[10]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[11]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[12]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[13]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[14]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[15]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[1]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[2]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[3]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[4]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[5]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[6]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[7]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[8]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[9]" tap_mode="classic" type="register"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|tx_ack_i" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|tx_rdy_o" tap_mode="classic" type="combinatorial"/>
          <wire name="rdout_controller_v2:xRDOUT_CNTRL|usb_slwr_i" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|address_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|read_reg_o[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_rdy_i" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="registers:xREGISTERS|write_reg_i[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|RBUSY" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|STARTRD" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|WBUSY" tap_mode="classic" type="register"/>
          <wire name="usb_32bit:xUSB|read_state" tap_mode="classic" type="state machine"/>
          <wire name="usb_32bit:xUSB|read_state.ENDDELAY" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_SAVE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_TARGET" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st1_WAIT" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st2_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st3_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|read_state.st4_READ" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state" tap_mode="classic" type="state machine"/>
          <wire name="usb_32bit:xUSB|write_state.IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.RCHECK" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.RD_DONE" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE1" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE2" tap_mode="classic" type="combinatorial"/>
          <wire name="usb_32bit:xUSB|write_state.STATE3" tap_mode="classic" type="combinatorial"/>
        </storage_qualifier_input_vec>
      </signal_vec>
      <presentation>
        <data_view>
          <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|usb_slwr_i"/>
          <bus is_signal_inverted="no" link="all" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[15]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[14]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[13]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[12]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[11]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[10]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[9]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[8]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[7]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[6]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[5]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[4]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[3]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[2]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[1]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[15]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[14]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[13]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[12]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[11]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[10]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[9]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[8]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[7]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[6]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[5]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[4]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[3]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[2]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[1]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[0]"/>
          </bus>
          <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|tx_ack_i"/>
          <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|tx_rdy_o"/>
          <net is_signal_inverted="no" name="registers:xREGISTERS|write_rdy_i"/>
          <bus is_signal_inverted="no" link="all" name="registers:xREGISTERS|write_reg_i" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[31]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[30]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[29]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[28]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[27]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[26]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[25]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[24]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[23]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[22]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[21]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[20]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[19]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[18]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[17]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[16]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[15]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[14]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[13]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[12]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[11]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[10]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[9]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[8]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[7]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[6]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[5]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[4]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[3]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[2]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[1]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="registers:xREGISTERS|address_o" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[7]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[6]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[5]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[4]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[3]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[2]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[1]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="registers:xREGISTERS|read_reg_o" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[31]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[30]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[29]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[28]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[27]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[26]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[25]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[24]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[23]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[22]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[21]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[20]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[19]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[18]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[17]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[16]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[15]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[14]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[13]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[12]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[11]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[10]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[9]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[8]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[7]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[6]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[5]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[4]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[3]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[2]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[1]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="USB_FD" order="msb_to_lsb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="USB_FD[15]"/>
            <net is_signal_inverted="no" name="USB_FD[14]"/>
            <net is_signal_inverted="no" name="USB_FD[13]"/>
            <net is_signal_inverted="no" name="USB_FD[12]"/>
            <net is_signal_inverted="no" name="USB_FD[11]"/>
            <net is_signal_inverted="no" name="USB_FD[10]"/>
            <net is_signal_inverted="no" name="USB_FD[9]"/>
            <net is_signal_inverted="no" name="USB_FD[8]"/>
            <net is_signal_inverted="no" name="USB_FD[7]"/>
            <net is_signal_inverted="no" name="USB_FD[6]"/>
            <net is_signal_inverted="no" name="USB_FD[5]"/>
            <net is_signal_inverted="no" name="USB_FD[4]"/>
            <net is_signal_inverted="no" name="USB_FD[3]"/>
            <net is_signal_inverted="no" name="USB_FD[2]"/>
            <net is_signal_inverted="no" name="USB_FD[1]"/>
            <net is_signal_inverted="no" name="USB_FD[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="USB_CTL" order="msb_to_lsb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="USB_CTL[2]"/>
            <net is_signal_inverted="no" name="USB_CTL[1]"/>
            <net is_signal_inverted="no" name="USB_CTL[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="USB_PA" order="msb_to_lsb" radix="hex" state="expand" type="bidir pin">
            <net is_signal_inverted="no" name="USB_PA[7]"/>
            <net is_signal_inverted="no" name="USB_PA[6]"/>
            <net is_signal_inverted="no" name="USB_PA[5]"/>
            <net is_signal_inverted="no" name="USB_PA[4]"/>
            <net is_signal_inverted="no" name="USB_PA[3]"/>
            <net is_signal_inverted="no" name="USB_PA[2]"/>
            <net is_signal_inverted="no" name="USB_PA[1]"/>
            <net is_signal_inverted="no" name="USB_PA[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="USB_RDY" order="msb_to_lsb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="USB_RDY[1]"/>
            <net is_signal_inverted="no" name="USB_RDY[0]"/>
          </bus>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.IDLE"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.RCHECK"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.RD_DONE"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.STATE1"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.STATE2"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.STATE3"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.ENDDELAY"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st1_READ"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st1_SAVE"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st1_TARGET"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st1_WAIT"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st2_READ"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st3_READ"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st4_READ"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|RBUSY"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|WBUSY"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|STARTRD"/>
        </data_view>
        <setup_view>
          <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|usb_slwr_i"/>
          <bus is_signal_inverted="no" link="all" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[15]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[14]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[13]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[12]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[11]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[10]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[9]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[8]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[7]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[6]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[5]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[4]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[3]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[2]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[1]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|readout_value[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[15]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[14]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[13]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[12]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[11]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[10]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[9]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[8]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[7]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[6]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[5]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[4]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[3]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[2]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[1]"/>
            <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|rdout_fpga_data_o[0]"/>
          </bus>
          <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|tx_ack_i"/>
          <net is_signal_inverted="no" name="rdout_controller_v2:xRDOUT_CNTRL|tx_rdy_o"/>
          <net is_signal_inverted="no" name="registers:xREGISTERS|write_rdy_i"/>
          <bus is_signal_inverted="no" link="all" name="registers:xREGISTERS|write_reg_i" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[31]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[30]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[29]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[28]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[27]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[26]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[25]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[24]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[23]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[22]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[21]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[20]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[19]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[18]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[17]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[16]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[15]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[14]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[13]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[12]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[11]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[10]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[9]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[8]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[7]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[6]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[5]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[4]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[3]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[2]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[1]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|write_reg_i[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="registers:xREGISTERS|address_o" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[7]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[6]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[5]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[4]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[3]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[2]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[1]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|address_o[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="registers:xREGISTERS|read_reg_o" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[31]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[30]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[29]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[28]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[27]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[26]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[25]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[24]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[23]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[22]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[21]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[20]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[19]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[18]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[17]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[16]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[15]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[14]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[13]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[12]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[11]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[10]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[9]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[8]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[7]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[6]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[5]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[4]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[3]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[2]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[1]"/>
            <net is_signal_inverted="no" name="registers:xREGISTERS|read_reg_o[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="USB_FD" order="msb_to_lsb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="USB_FD[15]"/>
            <net is_signal_inverted="no" name="USB_FD[14]"/>
            <net is_signal_inverted="no" name="USB_FD[13]"/>
            <net is_signal_inverted="no" name="USB_FD[12]"/>
            <net is_signal_inverted="no" name="USB_FD[11]"/>
            <net is_signal_inverted="no" name="USB_FD[10]"/>
            <net is_signal_inverted="no" name="USB_FD[9]"/>
            <net is_signal_inverted="no" name="USB_FD[8]"/>
            <net is_signal_inverted="no" name="USB_FD[7]"/>
            <net is_signal_inverted="no" name="USB_FD[6]"/>
            <net is_signal_inverted="no" name="USB_FD[5]"/>
            <net is_signal_inverted="no" name="USB_FD[4]"/>
            <net is_signal_inverted="no" name="USB_FD[3]"/>
            <net is_signal_inverted="no" name="USB_FD[2]"/>
            <net is_signal_inverted="no" name="USB_FD[1]"/>
            <net is_signal_inverted="no" name="USB_FD[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="USB_CTL" order="msb_to_lsb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="USB_CTL[2]"/>
            <net is_signal_inverted="no" name="USB_CTL[1]"/>
            <net is_signal_inverted="no" name="USB_CTL[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="USB_PA" order="msb_to_lsb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="USB_PA[7]"/>
            <net is_signal_inverted="no" name="USB_PA[6]"/>
            <net is_signal_inverted="no" name="USB_PA[5]"/>
            <net is_signal_inverted="no" name="USB_PA[4]"/>
            <net is_signal_inverted="no" name="USB_PA[3]"/>
            <net is_signal_inverted="no" name="USB_PA[2]"/>
            <net is_signal_inverted="no" name="USB_PA[1]"/>
            <net is_signal_inverted="no" name="USB_PA[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="USB_RDY" order="msb_to_lsb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="USB_RDY[1]"/>
            <net is_signal_inverted="no" name="USB_RDY[0]"/>
          </bus>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.IDLE"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.RCHECK"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.RD_DONE"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.STATE1"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.STATE2"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|write_state.STATE3"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.ENDDELAY"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st1_READ"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st1_SAVE"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st1_TARGET"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st1_WAIT"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st2_READ"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st3_READ"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|read_state.st4_READ"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|RBUSY"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|WBUSY"/>
          <net is_signal_inverted="no" name="usb_32bit:xUSB|STARTRD"/>
        </setup_view>
      </presentation>
      <trigger attribute_mem_mode="false" gap_record="true" global_temp="1" name="trigger: 2018/02/24 11:04:49  #1" position="pre" power_up_trigger_mode="false" record_data_gap="true" segment_size="512" storage_mode="off" storage_qualifier_disabled="no" storage_qualifier_port_is_pin="true" storage_qualifier_port_name="auto_stp_external_storage_qualifier" storage_qualifier_port_tap_mode="classic" trigger_in="dont_care" trigger_out="active high" trigger_type="circular">
        <power_up_trigger position="pre" storage_qualifier_disabled="no" trigger_in="dont_care" trigger_out="active high"/>
        <events use_custom_flow_control="no">
          <level enabled="yes" name="condition1" type="basic">'registers:xREGISTERS|write_rdy_i' == rising edge
            <power_up enabled="yes">
            </power_up>
            <op_node/>
          </level>
        </events>
        <storage_qualifier_events>
          <transitional>000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
            <pwr_up_transitional>000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</pwr_up_transitional>
          </transitional>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
        </storage_qualifier_events>
      </trigger>
    </signal_set>
  </instance>
  <mnemonics/>
  <static_plugin_mnemonics/>
  <global_info>
    <single attribute="active instance" value="0"/>
    <single attribute="config widget visible" value="1"/>
    <single attribute="data log widget visible" value="1"/>
    <single attribute="hierarchy widget height" value="165"/>
    <single attribute="hierarchy widget visible" value="1"/>
    <single attribute="instance widget visible" value="1"/>
    <single attribute="jtag widget visible" value="1"/>
    <multi attribute="column width" size="23" value="34,34,312,74,68,70,88,88,98,98,88,88,110,101,101,101,101,101,101,101,101,107,78"/>
    <multi attribute="frame size" size="2" value="1538,957"/>
    <multi attribute="jtag widget size" size="2" value="334,120"/>
  </global_info>
</session>
